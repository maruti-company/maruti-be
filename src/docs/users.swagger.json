{
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "description": "Retrieve a paginated list of all users (Admin only)",
        "tags": ["Users"],
        "servers": [
          {
            "url": "http://localhost:3000/api/v1",
            "description": "Development server (API endpoints)"
          },
          {
            "url": "https://api.maruti.com/api/v1",
            "description": "Production server (API endpoints)"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "example": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of users per page",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "example": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Token required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create new user",
        "description": "Create a new user account (Admin only)",
        "tags": ["Users"],
        "servers": [
          {
            "url": "http://localhost:3000/api/v1",
            "description": "Development server (API endpoints)"
          },
          {
            "url": "https://api.maruti.com/api/v1",
            "description": "Production server (API endpoints)"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              },
              "example": {
                "email": "employee@maruti.com",
                "user_name": "John Doe",
                "password": "employee123",
                "role": 2
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "description": "Retrieve a specific user by their ID (Admin only)",
        "tags": ["Users"],
        "servers": [
          {
            "url": "http://localhost:3000/api/v1",
            "description": "Development server (API endpoints)"
          },
          {
            "url": "https://api.maruti.com/api/v1",
            "description": "Production server (API endpoints)"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "15167593-beb4-455c-a779-9864416af4f4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID format",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Update user information (Admin only)",
        "tags": ["Users"],
        "servers": [
          {
            "url": "http://localhost:3000/api/v1",
            "description": "Development server (API endpoints)"
          },
          {
            "url": "https://api.maruti.com/api/v1",
            "description": "Production server (API endpoints)"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "15167593-beb4-455c-a779-9864416af4f4"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              },
              "example": {
                "email": "newemail@maruti.com",
                "user_name": "Jane Smith",
                "role": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "409": {
            "description": "Email already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a user account (Admin only, cannot delete self)",
        "tags": ["Users"],
        "servers": [
          {
            "url": "http://localhost:3000/api/v1",
            "description": "Development server (API endpoints)"
          },
          {
            "url": "https://api.maruti.com/api/v1",
            "description": "Production server (API endpoints)"
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User UUID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "15167593-beb4-455c-a779-9864416af4f4"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "400": {
            "description": "Cannot delete self or invalid ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Admin access required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateUserRequest": {
        "type": "object",
        "required": ["email", "user_name", "password", "role"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "employee@maruti.com",
            "description": "User's email address"
          },
          "user_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "John Doe",
            "description": "User's display name"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "employee123",
            "description": "User's password (minimum 6 characters)"
          },
          "role": {
            "type": "integer",
            "enum": [1, 2],
            "example": 2,
            "description": "User role (1 = Admin, 2 = Employee)"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "minProperties": 1,
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "newemail@maruti.com",
            "description": "User's email address"
          },
          "user_name": {
            "type": "string",
            "minLength": 2,
            "maxLength": 100,
            "example": "Jane Smith",
            "description": "User's display name"
          },
          "password": {
            "type": "string",
            "minLength": 6,
            "example": "newpassword123",
            "description": "User's new password (minimum 6 characters)"
          },
          "role": {
            "type": "integer",
            "enum": [1, 2],
            "example": 1,
            "description": "User role (1 = Admin, 2 = Employee)"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "User retrieved successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "UsersListResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Users retrieved successfully"
          },
          "data": {
            "type": "object",
            "properties": {
              "users": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "pagination": {
                "$ref": "#/components/schemas/Pagination"
              }
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "example": 1,
            "description": "Current page number"
          },
          "limit": {
            "type": "integer",
            "example": 10,
            "description": "Number of items per page"
          },
          "total": {
            "type": "integer",
            "example": 25,
            "description": "Total number of items"
          },
          "pages": {
            "type": "integer",
            "example": 3,
            "description": "Total number of pages"
          },
          "hasNext": {
            "type": "boolean",
            "example": true,
            "description": "Whether there is a next page"
          },
          "hasPrev": {
            "type": "boolean",
            "example": false,
            "description": "Whether there is a previous page"
          }
        }
      }
    }
  }
} 